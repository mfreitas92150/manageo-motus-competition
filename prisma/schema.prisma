generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cop_user {
  email    String   @id(map: "user_pk")
  role     String?  @default("USER")
  validate Boolean? @default(false)
}

model cop_word {
  word            String
  affected_at     DateTime? @db.Timestamp(6)
  email           String?
  id              Int       @id(map: "cop_word_pk") @default(autoincrement())
  guesses         String?
  success         Boolean?  @default(false)
  current_line    Int?      @default(0)
  current_guess   String?
  championship_id Int
}

model cop_user_ranking {
  id         Int     @id(map: "cop_user_ranking_pk") @unique(map: "cop_user_ranking_id_uindex") @default(autoincrement())
  ranking_id Int?
  email      String?
  point      Int?
}

model cop_ranking {
  id        Int       @id(map: "cop_ranking_pk") @default(autoincrement())
  create_at DateTime? @db.Timestamp(6)
}

model cop_championship {
  id    Int       @id(map: "cop_championship_pk") @default(autoincrement())
  name  String
  begin DateTime? @db.Timestamp(6)
  end   DateTime? @db.Timestamp(6)
}

model cop_championship_user {
  id              Int    @id(map: "cop_championship_user_pk") @unique(map: "cop_championship_user_id_uindex") @default(autoincrement())
  championship_id Int
  user_email      String
}

model cop_word_joke {
  id        Int       @id(map: "cop_word_joke_pk") @default(autoincrement())
  word_id   Int
  joke      String
  create_at DateTime? @db.Timestamp(6)
}
